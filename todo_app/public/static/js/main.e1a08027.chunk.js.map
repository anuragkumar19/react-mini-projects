{"version":3,"sources":["components/Card.js","components/AddTodo.js","components/Todo.js","components/Todos.js","App.js","index.js"],"names":["Card","children","className","AddTodo","addTodo","useState","title","setTitle","onSubmit","e","trim","preventDefault","then","type","placeholder","name","id","value","onChange","currentTarget","Todo","todo","deleteTodo","updateTodo","input","useRef","isEditable","setIsEditable","ref","disabled","onClick","setTimeout","current","blur","focus","Todos","todos","map","App","setTodos","useEffect","a","fetch","method","res","json","data","getTodos","filter","console","log","alert","newTodo","JSON","stringify","createdAt","Date","body","headers","Error","i","findIndex","newTodos","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1a08027.chunk.js","sourcesContent":["const Card = ({ children }) => {\r\n    return (\r\n        <div className='card'>\r\n            <div className='card-body'>{children}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import { useState } from 'react'\r\n\r\nconst AddTodo = ({ addTodo }) => {\r\n    const [title, setTitle] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        if (typeof title !== 'string') return\r\n        if (!title.trim()) return\r\n\r\n        e.preventDefault()\r\n        addTodo(title.trim()).then(() => setTitle(''))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Add Todo</h2>\r\n            <form className='form-control' onSubmit={submitHandler}>\r\n                <input\r\n                    type='text'\r\n                    placeholder=\"Your Todo's Title\"\r\n                    name='title'\r\n                    id='title'\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.currentTarget.value)}\r\n                />\r\n                <input type='submit' value='Add' />\r\n            </form>\r\n\r\n            <div className='divider'></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTodo\r\n","import { useRef, useState } from 'react'\r\n\r\nconst Todo = ({ todo, deleteTodo, updateTodo }) => {\r\n    const input = useRef(null)\r\n    const [title, setTitle] = useState(todo.title)\r\n    const [isEditable, setIsEditable] = useState(false)\r\n\r\n    const handleClick = () => {\r\n        setIsEditable(!isEditable)\r\n        setTimeout(() => {\r\n            isEditable ? input.current.blur() : input.current.focus()\r\n        }, 100)\r\n\r\n        if (isEditable) {\r\n            if (typeof title !== 'string' || !title.trim()) {\r\n                return setTitle(todo.title)\r\n            }\r\n            updateTodo(todo.id, title)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='todo'>\r\n            <input\r\n                ref={input}\r\n                type='text'\r\n                disabled={!isEditable}\r\n                value={title}\r\n                onChange={(e) => setTitle(e.currentTarget.value)}\r\n            />\r\n            <div className='todo-action'>\r\n                <button className='btn btn-info' onClick={handleClick}>\r\n                    {isEditable ? (\r\n                        <i className='fas fa-save'></i>\r\n                    ) : (\r\n                        <i className='fas fa-pen'></i>\r\n                    )}\r\n                </button>\r\n                <button\r\n                    className='btn btn-danger'\r\n                    onClick={() => deleteTodo(todo.id)}\r\n                >\r\n                    <i className='fas fa-trash'></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import Todo from './Todo'\r\n\r\nconst Todos = ({ todos, deleteTodo, updateTodo }) => (\r\n    <div className='todos'>\r\n        {todos.map((todo) => (\r\n            <Todo\r\n                key={todo.id}\r\n                todo={todo}\r\n                deleteTodo={deleteTodo}\r\n                updateTodo={updateTodo}\r\n            />\r\n        ))}\r\n    </div>\r\n)\r\n\r\nexport default Todos\r\n","import { useEffect, useState } from 'react'\nimport Card from './components/Card'\nimport AddTodo from './components/AddTodo'\nimport Todos from './components/Todos'\n\nfunction App() {\n    const [todos, setTodos] = useState([])\n\n    useEffect(() => {\n        const getTodos = async () => {\n            const res = await fetch('/todos', { method: 'get' })\n            const data = await res.json()\n            setTodos(data)\n        }\n\n        getTodos()\n    }, [])\n\n    const deleteTodo = async (id) => {\n        try {\n            await fetch(`/todos/${id}`, { method: 'delete' })\n            setTodos(todos.filter((todo) => todo.id !== id))\n        } catch (err) {\n            console.log(err)\n            alert('Error!')\n        }\n    }\n\n    const addTodo = async (title) => {\n        try {\n            const newTodo = JSON.stringify({ title, createdAt: new Date() })\n\n            let todo = await fetch('/todos', {\n                method: 'post',\n                body: newTodo,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n\n            todo = await todo.json()\n\n            setTodos([...todos, todo])\n        } catch (err) {\n            console.log(err)\n            alert('Error!')\n            throw new Error(err)\n        }\n    }\n\n    const updateTodo = async (id, title) => {\n        try {\n            const newTodo = JSON.stringify({ title })\n\n            let todo = await fetch(`/todos/${id}`, {\n                method: 'put',\n                body: newTodo,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n\n            todo = await todo.json()\n            const i = todos.findIndex((todo) => todo.id === id)\n            let newTodos = todos\n            newTodos[i] = todo\n            setTodos(newTodos)\n        } catch (err) {\n            console.log(err)\n            alert('Error!')\n            throw new Error(err)\n        }\n    }\n\n    return (\n        <div className='App'>\n            <h1 className='title'>Your Todo List</h1>\n            <Card>\n                <AddTodo addTodo={addTodo} />\n                <Todos\n                    todos={todos}\n                    deleteTodo={deleteTodo}\n                    updateTodo={updateTodo}\n                />\n            </Card>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}